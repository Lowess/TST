#    tst
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, Anthony Buisset (v0.1)
#    license type: free of charge license for academic and research purpose
#    see license.txt
### MODULE RECEPTION ##########################################################

### VARIABLES DU MODULE #######################################################
# dernier message recu
set TST_rcv_msg $APG_msg_unknown

# application emettrice du dernier message (en cas d'option --whatwho)
set TST_rcv_app $APG_msg_unknown

# mnemonique pour le header TST, contenant le nom de l'application qui a emis
# le message transporte.

set TST_rcv_mnemoapp $TST_rc_mnemoapp
set TST_rcv_mnemoPayload $TST_rc_mnemoPayload

#Les mnemoniques suivants doivent être ceux de ROU
set TST_rcv_mnemoDestNode $TST_rc_mnemoDestNode
set TST_rcv_mnemoDestApp $TST_rc_mnemoDestApp
set TST_rcv_mnemoTypeMessage $TST_rc_mnemoTypeMessage


###############################################################################


### ZONE DU MODULE ############################################################
## zone du module reception
labelframe .rcv -pady 2 -padx 2 \
    -text "Réception \[$APP, ident = $APG_ident\]"  -fg $APG_int_coltitle

label .rcv.t1 -text "Dernier message reçu de "
label .rcv.app -textvariable TST_rcv_app -width 4 -fg $APG_int_colmsgrcv
label .rcv.t2 -text " : "
label .rcv.msg -textvariable TST_rcv_msg -width 64  -fg $APG_int_colmsgrcv -anchor w
pack .rcv.t1 .rcv.app .rcv.t2 .rcv.msg -side left -fill y -pady 2

# affichage des sous-zones de la zone rcv
pack .rcv.msg .rcv.app -side left -fill y -pady 2

###############################################################################


### OPTIONS DE LA LIGNE DE COMMANDE ###########################################
foreach option $APG_lstargs {
    set name [lindex [split $option "="] 0]
    set value [lindex [split $option "="] 1]
    
    switch -- $name {
				--source {
						#--------------------------------------------------------------------------------
						# applications emettrices auxquelles il faut s'abonner
						#--------------------------------------------------------------------------------
						if { $value == "" } {
								APG_vrb_dispwarning "option $name trouvee sans argument ; ignoree"
						} else {
								APG_vrb_dispnotif "option $option trouvee, abonnement a l'app source $value"
								APG_begin_lch $value
						}
				}
    }
}
###############################################################################

### PROCEDURES DU MODULE ######################################################

#-- Procedure APG_receive_whatwho --------------------------------------------#
# Action : gere la reception de messages                                      #
# Remarq : surcharge de LIBAPGTK                                              #
# Entree : payload et emetteur                                                #
# Retour : rien                                                               #
#-----------------------------------------------------------------------------#
proc APG_receive_whatwho { what who } {

	# Mise a jour de l'interface du module rcv.
    set ::TST_rcv_msg $what
    set ::TST_rcv_app $who

	# Reception d'un message d'une application TST distante,
	# => transfert vers l'application BAS locale.
	
	# Recuperation de la valeur du champs application emettrice dans le
	# message recu.
	set app [APG_msg_splitstr what $::TST_rcv_mnemoapp]
	set destApp [APG_msg_splitstr what $::TST_rcv_mnemoDestApp]
	
	if { $destApp == $::APG_ident } {
		APG_vrb_dispdebug "### TST reception $who ||| $what"
				
		set typeMessage [APG_msg_splitstr what $::TST_rcv_mnemoTypeMessage]
		set payload [APG_msg_splitstr what $::TST_rcv_mnemoPayload]
		
		if { $typeMessage == "message" } {
			set ::TST_msg_received $payload
		}
	}
}

